version: "3"
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: sail-8.2/app
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - pgsql

    pgsql:
        image: "postgres:15"
        ports:
            - "5432:5432"
        environment:
            PGPASSWORD: "${DB_PASSWORD:-secret}"
            POSTGRES_DB: "${DB_DATABASE}"
            POSTGRES_USER: "${DB_USERNAME}"
            POSTGRES_PASSWORD: "${DB_PASSWORD:-secret}"
        volumes:
            - "sail-pgsql:/var/lib/postgresql/data"
            - "./vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - pg_isready
                - "-q"
                - "-d"
                - "${DB_DATABASE}"
                - "-U"
                - "${DB_USERNAME}"
            retries: 3
            timeout: 5s

    frontend:
        build:
            context: ../frontend
            dockerfile: Dockerfile
        ports:
            - "5174:5174"
        depends_on:
            - laravel.test
        environment:
            API_URL: http://localhost/api 
        volumes:
            - ../frontend:/app/frontend
            - /app/frontend/node_modules
        # command: npm run dev
        networks:
            - sail

    # pg_timetable:
    #     image: cybertecpostgresql/pg_timetable
    #     container_name: pg_timetable
    #     restart: always
    #     ports:
    #         - 8080:8080
    #     environment:
    #         - PG_TIMETABLE_DBHOST=pgsql
    #         - PG_TIMETABLE_DBNAME=${DB_DATABASE}
    #         - PG_TIMETABLE_DBUSER=${DB_USERNAME}
    #         - PG_TIMETABLE_DBPASSWORD=${DB_PASSWORD}
    #         - PG_TIMETABLE_DEBUG=True
    #         - PG_TIMETABLE_WORKERS=2
    #         - PG_TIMETABLE_NOTIFICATION_CHANNEL=pg_timetable
    #     depends_on:
    #         - pgsql
    #     networks:
    #         - sail

   
networks:
    sail:
        driver: bridge
volumes:
    sail-pgsql:
        driver: local
